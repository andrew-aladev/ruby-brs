var search_data = {"index":{"searchIndex":["brs","accessioerror","allocateerror","baseerror","decompressorcorruptedsourceerror","file","notenoughdestinationbuffererror","notenoughdestinationerror","notenoughsourcebuffererror","option","readioerror","stream","abstract","delegates","raw","abstract","compressor","decompressor","reader","readerhelpers","classmethods","stat","writer","writerhelpers","classmethods","string","unexpectederror","usedaftercloseerror","validateerror","validation","writeioerror","<<()","advise()","append_io_data()","close()","close()","close()","close()","close()","close()","close_nonblock()","closed?()","closed?()","compress()","compress()","create_raw_stream()","create_raw_stream()","decompress()","decompress()","do_not_use_after_close()","each()","each_byte()","each_char()","each_line()","each_string()","empty?()","eof?()","finish()","finish_nonblock()","flush()","flush()","flush()","flush()","flush_io_data()","flush_nonblock()","get_compressor_options()","get_decompressor_options()","getbyte()","getc()","gets()","included()","included()","included()","initialize_source_buffer_length()","more_destination()","new()","new()","new()","new()","new()","new()","new()","open()","open()","print()","printf()","process_set_encoding_arguments()","putc()","puts()","raw_nonblock_wrapper()","raw_wrapper()","raw_wrapper()","read()","read()","read_buffer()","read_bytes_from_buffer()","read_more_nonblock()","read_nonblock()","readbyte()","readchar()","readline()","readlines()","readpartial()","readstring()","reset_buffer()","reset_io_advise()","reset_io_remainder()","reset_need_to_flush()","rewind()","rewind()","rewind()","rewind_nonblock()","set_encoding()","set_target_encoding()","target_encoding()","to_io()","transcode()","transcode_to_external()","transcode_to_internal()","ungetbyte()","ungetc()","ungetline()","ungetstring()","validate_bool()","validate_hash()","validate_not_negative_integer()","validate_positive_integer()","validate_proc()","validate_string()","validate_symbol()","validate_write()","validate_write_nonblock()","write()","write()","write_nonblock()","write_remaining_buffer()","write_remaining_buffer_nonblock()","write_result()","authors","license"],"longSearchIndex":["brs","brs::accessioerror","brs::allocateerror","brs::baseerror","brs::decompressorcorruptedsourceerror","brs::file","brs::notenoughdestinationbuffererror","brs::notenoughdestinationerror","brs::notenoughsourcebuffererror","brs::option","brs::readioerror","brs::stream","brs::stream::abstract","brs::stream::delegates","brs::stream::raw","brs::stream::raw::abstract","brs::stream::raw::compressor","brs::stream::raw::decompressor","brs::stream::reader","brs::stream::readerhelpers","brs::stream::readerhelpers::classmethods","brs::stream::stat","brs::stream::writer","brs::stream::writerhelpers","brs::stream::writerhelpers::classmethods","brs::string","brs::unexpectederror","brs::usedaftercloseerror","brs::validateerror","brs::validation","brs::writeioerror","brs::stream::writerhelpers#<<()","brs::stream::abstract#advise()","brs::stream::reader#append_io_data()","brs::stream::abstract#close()","brs::stream::raw::abstract#close()","brs::stream::raw::compressor#close()","brs::stream::raw::decompressor#close()","brs::stream::reader#close()","brs::stream::writer#close()","brs::stream::writer#close_nonblock()","brs::stream::abstract#closed?()","brs::stream::raw::abstract#closed?()","brs::file::compress()","brs::string::compress()","brs::stream::reader#create_raw_stream()","brs::stream::writer#create_raw_stream()","brs::file::decompress()","brs::string::decompress()","brs::stream::raw::abstract#do_not_use_after_close()","brs::stream::readerhelpers#each()","brs::stream::readerhelpers#each_byte()","brs::stream::readerhelpers#each_char()","brs::stream::readerhelpers#each_line()","brs::stream::readerhelpers#each_string()","brs::stream::reader#empty?()","brs::stream::reader#eof?()","brs::stream::writer#finish()","brs::stream::writer#finish_nonblock()","brs::stream::raw::abstract#flush()","brs::stream::raw::compressor#flush()","brs::stream::raw::decompressor#flush()","brs::stream::writer#flush()","brs::stream::reader#flush_io_data()","brs::stream::writer#flush_nonblock()","brs::option::get_compressor_options()","brs::option::get_decompressor_options()","brs::stream::readerhelpers#getbyte()","brs::stream::readerhelpers#getc()","brs::stream::readerhelpers#gets()","brs::stream::delegates::included()","brs::stream::readerhelpers::included()","brs::stream::writerhelpers::included()","brs::stream::reader#initialize_source_buffer_length()","brs::stream::raw::abstract#more_destination()","brs::stream::abstract::new()","brs::stream::raw::abstract::new()","brs::stream::raw::compressor::new()","brs::stream::raw::decompressor::new()","brs::stream::reader::new()","brs::stream::stat::new()","brs::stream::writer::new()","brs::stream::readerhelpers::classmethods#open()","brs::stream::writerhelpers::classmethods#open()","brs::stream::writerhelpers#print()","brs::stream::writerhelpers#printf()","brs::stream::abstract#process_set_encoding_arguments()","brs::stream::writerhelpers#putc()","brs::stream::writerhelpers#puts()","brs::stream::writer#raw_nonblock_wrapper()","brs::stream::reader#raw_wrapper()","brs::stream::writer#raw_wrapper()","brs::stream::raw::decompressor#read()","brs::stream::reader#read()","brs::stream::reader#read_buffer()","brs::stream::reader#read_bytes_from_buffer()","brs::stream::reader#read_more_nonblock()","brs::stream::reader#read_nonblock()","brs::stream::readerhelpers#readbyte()","brs::stream::readerhelpers#readchar()","brs::stream::readerhelpers#readline()","brs::stream::readerhelpers#readlines()","brs::stream::reader#readpartial()","brs::stream::readerhelpers#readstring()","brs::stream::abstract#reset_buffer()","brs::stream::abstract#reset_io_advise()","brs::stream::reader#reset_io_remainder()","brs::stream::reader#reset_need_to_flush()","brs::stream::abstract#rewind()","brs::stream::reader#rewind()","brs::stream::writer#rewind()","brs::stream::writer#rewind_nonblock()","brs::stream::abstract#set_encoding()","brs::stream::abstract#set_target_encoding()","brs::stream::abstract#target_encoding()","brs::stream::abstract#to_io()","brs::stream::writer#transcode()","brs::stream::reader#transcode_to_external()","brs::stream::reader#transcode_to_internal()","brs::stream::readerhelpers#ungetbyte()","brs::stream::readerhelpers#ungetc()","brs::stream::readerhelpers#ungetline()","brs::stream::readerhelpers#ungetstring()","brs::validation::validate_bool()","brs::validation::validate_hash()","brs::validation::validate_not_negative_integer()","brs::validation::validate_positive_integer()","brs::validation::validate_proc()","brs::validation::validate_string()","brs::validation::validate_symbol()","brs::stream::writer#validate_write()","brs::stream::writer#validate_write_nonblock()","brs::stream::raw::compressor#write()","brs::stream::writer#write()","brs::stream::writer#write_nonblock()","brs::stream::writer#write_remaining_buffer()","brs::stream::writer#write_remaining_buffer_nonblock()","brs::stream::raw::abstract#write_result()","",""],"info":[["BRS","","BRS.html","","<p>Ruby bindings for brotli library. Copyright © 2019 AUTHORS, MIT License.\n<p>Ruby bindings for brotli library. …\n"],["BRS::AccessIOError","","BRS/AccessIOError.html","",""],["BRS::AllocateError","","BRS/AllocateError.html","",""],["BRS::BaseError","","BRS/BaseError.html","",""],["BRS::DecompressorCorruptedSourceError","","BRS/DecompressorCorruptedSourceError.html","",""],["BRS::File","","BRS/File.html","","<p>BRS::File module.\n"],["BRS::NotEnoughDestinationBufferError","","BRS/NotEnoughDestinationBufferError.html","",""],["BRS::NotEnoughDestinationError","","BRS/NotEnoughDestinationError.html","",""],["BRS::NotEnoughSourceBufferError","","BRS/NotEnoughSourceBufferError.html","",""],["BRS::Option","","BRS/Option.html","","<p>BRS::Option module.\n"],["BRS::ReadIOError","","BRS/ReadIOError.html","",""],["BRS::Stream","","BRS/Stream.html","",""],["BRS::Stream::Abstract","","BRS/Stream/Abstract.html","","<p>BRS::Stream::Abstract class.\n"],["BRS::Stream::Delegates","","BRS/Stream/Delegates.html","","<p>BRS::Stream::Delegates module.\n"],["BRS::Stream::Raw","","BRS/Stream/Raw.html","",""],["BRS::Stream::Raw::Abstract","","BRS/Stream/Raw/Abstract.html","","<p>BRS::Stream::Raw::Abstract class.\n"],["BRS::Stream::Raw::Compressor","","BRS/Stream/Raw/Compressor.html","","<p>BRS::Stream::Raw::Compressor class.\n"],["BRS::Stream::Raw::Decompressor","","BRS/Stream/Raw/Decompressor.html","","<p>BRS::Stream::Raw::Decompressor class.\n"],["BRS::Stream::Reader","","BRS/Stream/Reader.html","","<p>BRS::Stream::Reader class.\n"],["BRS::Stream::ReaderHelpers","","BRS/Stream/ReaderHelpers.html","","<p>BRS::Stream::ReaderHelpers module.\n"],["BRS::Stream::ReaderHelpers::ClassMethods","","BRS/Stream/ReaderHelpers/ClassMethods.html","","<p>BRS::Stream::ReaderHelpers::ClassMethods class.\n"],["BRS::Stream::Stat","","BRS/Stream/Stat.html","","<p>BRS::Stream::Stat class.\n"],["BRS::Stream::Writer","","BRS/Stream/Writer.html","","<p>BRS::Stream::Writer class.\n"],["BRS::Stream::WriterHelpers","","BRS/Stream/WriterHelpers.html","","<p>BRS::Stream::WriterHelpers module.\n"],["BRS::Stream::WriterHelpers::ClassMethods","","BRS/Stream/WriterHelpers/ClassMethods.html","","<p>BRS::Stream::WriterHelpers::ClassMethods module.\n"],["BRS::String","","BRS/String.html","","<p>BRS::String module.\n"],["BRS::UnexpectedError","","BRS/UnexpectedError.html","",""],["BRS::UsedAfterCloseError","","BRS/UsedAfterCloseError.html","",""],["BRS::ValidateError","","BRS/ValidateError.html","",""],["BRS::Validation","","BRS/Validation.html","","<p>BRS::Validation module.\n"],["BRS::WriteIOError","","BRS/WriteIOError.html","",""],["<<","BRS::Stream::WriterHelpers","BRS/Stream/WriterHelpers.html#method-i-3C-3C","(object)",""],["advise","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-advise","()",""],["append_io_data","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-append_io_data","(io_data)","<p>– common –\n"],["close","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-close","()",""],["close","BRS::Stream::Raw::Abstract","BRS/Stream/Raw/Abstract.html#method-i-close","(&writer)",""],["close","BRS::Stream::Raw::Compressor","BRS/Stream/Raw/Compressor.html#method-i-close","(&writer)",""],["close","BRS::Stream::Raw::Decompressor","BRS/Stream/Raw/Decompressor.html#method-i-close","(&writer)",""],["close","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-close","()",""],["close","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-close","()",""],["close_nonblock","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-close_nonblock","(*options)",""],["closed?","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-closed-3F","()",""],["closed?","BRS::Stream::Raw::Abstract","BRS/Stream/Raw/Abstract.html#method-i-closed-3F","()",""],["compress","BRS::File","BRS/File.html#method-c-compress","(source, destination, options = {})",""],["compress","BRS::String","BRS/String.html#method-c-compress","(source, options = {})",""],["create_raw_stream","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-create_raw_stream","()",""],["create_raw_stream","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-create_raw_stream","()",""],["decompress","BRS::File","BRS/File.html#method-c-decompress","(source, destination, options = {})",""],["decompress","BRS::String","BRS/String.html#method-c-decompress","(source, options = {})",""],["do_not_use_after_close","BRS::Stream::Raw::Abstract","BRS/Stream/Raw/Abstract.html#method-i-do_not_use_after_close","()","<p>– close –\n"],["each","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-each","(&block)",""],["each_byte","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-each_byte","(&block)",""],["each_char","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-each_char","(&block)",""],["each_line","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-each_line","(&block)",""],["each_string","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-each_string","(each_proc, &block)",""],["empty?","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-empty-3F","()",""],["eof?","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-eof-3F","()",""],["finish","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-finish","(method_name)",""],["finish_nonblock","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-finish_nonblock","(method_name, *options)",""],["flush","BRS::Stream::Raw::Abstract","BRS/Stream/Raw/Abstract.html#method-i-flush","(&writer)","<p>– write –\n"],["flush","BRS::Stream::Raw::Compressor","BRS/Stream/Raw/Compressor.html#method-i-flush","(&writer)",""],["flush","BRS::Stream::Raw::Decompressor","BRS/Stream/Raw/Decompressor.html#method-i-flush","(&writer)",""],["flush","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-flush","()",""],["flush_io_data","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-flush_io_data","()",""],["flush_nonblock","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-flush_nonblock","(*options)",""],["get_compressor_options","BRS::Option","BRS/Option.html#method-c-get_compressor_options","(options, buffer_length_names)",""],["get_decompressor_options","BRS::Option","BRS/Option.html#method-c-get_decompressor_options","(options, buffer_length_names)",""],["getbyte","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-getbyte","()",""],["getc","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-getc","()","<p>– char –\n"],["gets","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-gets","(separator = $OUTPUT_RECORD_SEPARATOR, limit = nil)","<p>– lines –\n"],["included","BRS::Stream::Delegates","BRS/Stream/Delegates.html#method-c-included","(klass)",""],["included","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-c-included","(klass)",""],["included","BRS::Stream::WriterHelpers","BRS/Stream/WriterHelpers.html#method-c-included","(klass)",""],["initialize_source_buffer_length","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-initialize_source_buffer_length","()",""],["more_destination","BRS::Stream::Raw::Abstract","BRS/Stream/Raw/Abstract.html#method-i-more_destination","(&writer)",""],["new","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-c-new","(io, options = {})",""],["new","BRS::Stream::Raw::Abstract","BRS/Stream/Raw/Abstract.html#method-c-new","(native_stream)",""],["new","BRS::Stream::Raw::Compressor","BRS/Stream/Raw/Compressor.html#method-c-new","(options = {})",""],["new","BRS::Stream::Raw::Decompressor","BRS/Stream/Raw/Decompressor.html#method-c-new","(options = {})",""],["new","BRS::Stream::Reader","BRS/Stream/Reader.html#method-c-new","(source_io, options = {}, *args)",""],["new","BRS::Stream::Stat","BRS/Stream/Stat.html#method-c-new","(stat)",""],["new","BRS::Stream::Writer","BRS/Stream/Writer.html#method-c-new","(destination_io, options = {}, *args)",""],["open","BRS::Stream::ReaderHelpers::ClassMethods","BRS/Stream/ReaderHelpers/ClassMethods.html#method-i-open","(file_path, *args, &block)",""],["open","BRS::Stream::WriterHelpers::ClassMethods","BRS/Stream/WriterHelpers/ClassMethods.html#method-i-open","(file_path, *args, &block)",""],["print","BRS::Stream::WriterHelpers","BRS/Stream/WriterHelpers.html#method-i-print","(*objects, field_separator: $OUTPUT_FIELD_SEPARATOR, record_separator: $OUTPUT_RECORD_SEPARATOR)",""],["printf","BRS::Stream::WriterHelpers","BRS/Stream/WriterHelpers.html#method-i-printf","(*args)",""],["process_set_encoding_arguments","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-process_set_encoding_arguments","(*args)",""],["putc","BRS::Stream::WriterHelpers","BRS/Stream/WriterHelpers.html#method-i-putc","(object, encoding: ::Encoding::BINARY)",""],["puts","BRS::Stream::WriterHelpers","BRS/Stream/WriterHelpers.html#method-i-puts","(*objects)",""],["raw_nonblock_wrapper","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-raw_nonblock_wrapper","(method_name, *args)",""],["raw_wrapper","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-raw_wrapper","(method_name, *args)",""],["raw_wrapper","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-raw_wrapper","(method_name, *args)",""],["read","BRS::Stream::Raw::Decompressor","BRS/Stream/Raw/Decompressor.html#method-i-read","(source, &writer)",""],["read","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-read","(bytes_to_read = nil, out_buffer = nil)","<p>– synchronous –\n"],["read_buffer","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-read_buffer","(out_buffer)",""],["read_bytes_from_buffer","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-read_bytes_from_buffer","(bytes_to_read, out_buffer)",""],["read_more_nonblock","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-read_more_nonblock","(bytes_to_read, out_buffer, &_block)",""],["read_nonblock","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-read_nonblock","(bytes_to_read, out_buffer = nil, *options)",""],["readbyte","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-readbyte","()",""],["readchar","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-readchar","()",""],["readline","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-readline","()",""],["readlines","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-readlines","()",""],["readpartial","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-readpartial","(bytes_to_read, out_buffer = nil)","<p>– asynchronous –\n"],["readstring","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-readstring","(each_proc)","<p>– common –\n"],["reset_buffer","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-reset_buffer","()","<p>– buffer –\n"],["reset_io_advise","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-reset_io_advise","()","<p>– advise –\n"],["reset_io_remainder","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-reset_io_remainder","()",""],["reset_need_to_flush","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-reset_need_to_flush","()",""],["rewind","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-rewind","()","<p>– etc –\n"],["rewind","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-rewind","()",""],["rewind","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-rewind","()",""],["rewind_nonblock","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-rewind_nonblock","(*options)",""],["set_encoding","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-set_encoding","(*args)","<p>– encoding –\n"],["set_target_encoding","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-set_target_encoding","(name, value)",""],["target_encoding","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-target_encoding","()",""],["to_io","BRS::Stream::Abstract","BRS/Stream/Abstract.html#method-i-to_io","()",""],["transcode","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-transcode","(data)","<p>– common –\n"],["transcode_to_external","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-transcode_to_external","(data)","<p>We should be able to return data back to buffer. We won’t use any transcode options because transcoded …\n"],["transcode_to_internal","BRS::Stream::Reader","BRS/Stream/Reader.html#method-i-transcode_to_internal","(data)",""],["ungetbyte","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-ungetbyte","(byte)",""],["ungetc","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-ungetc","(char)",""],["ungetline","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-ungetline","(line)",""],["ungetstring","BRS::Stream::ReaderHelpers","BRS/Stream/ReaderHelpers.html#method-i-ungetstring","(string)",""],["validate_bool","BRS::Validation","BRS/Validation.html#method-c-validate_bool","(value)",""],["validate_hash","BRS::Validation","BRS/Validation.html#method-c-validate_hash","(value)",""],["validate_not_negative_integer","BRS::Validation","BRS/Validation.html#method-c-validate_not_negative_integer","(value)",""],["validate_positive_integer","BRS::Validation","BRS/Validation.html#method-c-validate_positive_integer","(value)",""],["validate_proc","BRS::Validation","BRS/Validation.html#method-c-validate_proc","(value)",""],["validate_string","BRS::Validation","BRS/Validation.html#method-c-validate_string","(value)",""],["validate_symbol","BRS::Validation","BRS/Validation.html#method-c-validate_symbol","(value)",""],["validate_write","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-validate_write","()",""],["validate_write_nonblock","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-validate_write_nonblock","()",""],["write","BRS::Stream::Raw::Compressor","BRS/Stream/Raw/Compressor.html#method-i-write","(source, &writer)",""],["write","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-write","(*objects)","<p>– synchronous –\n"],["write_nonblock","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-write_nonblock","(object, *options)","<p>IO write nonblock can raise wait writable error. After resolving this error user may provide same content …\n"],["write_remaining_buffer","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-write_remaining_buffer","()",""],["write_remaining_buffer_nonblock","BRS::Stream::Writer","BRS/Stream/Writer.html#method-i-write_remaining_buffer_nonblock","(*options)",""],["write_result","BRS::Stream::Raw::Abstract","BRS/Stream/Raw/Abstract.html#method-i-write_result","(&_writer)",""],["AUTHORS","","AUTHORS.html","","<p>Andrew Aladjev Jenner La Fave\n"],["LICENSE","","LICENSE.html","","<p>MIT License\n<p>Copyright © 2019 AUTHORS\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"]]}}